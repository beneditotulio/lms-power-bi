@model SGBWeb.Models.Book

@{
    ViewBag.Title = "Criar";
}

<h2 class="btn-success">Criar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <h4>Informação Essenciais</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subtitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subtitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subtitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CDU, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CDU, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CDU, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookcaseID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BookcaseID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BookcaseID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PublisherID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PublisherID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PublisherID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LanguageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LanguageID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LanguageID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Criar" class="btn btn-success fa fa-save" />
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <h4>Informção Adicional</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Pagination, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Pagination, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pagination, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AvailableCopies, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AvailableCopies, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AvailableCopies, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Illustration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Illustration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Illustration, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <!-- Input field for searching and selecting authors -->
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedAuthorIDs, "Pesquise o nome do Autor")
                    @Html.TextBox("authorSearch", null, new { @class = "form-control", placeholder = "Nome do Autor" })
                    <div id="authorSearchResults"></div>
                </div>

                <!-- Display selected authors -->
                <div class="form-group">
                    <label for="SelectedAuthorIDs">Autor(e)s Selecionad(o):</label>
                    <ul id="selectedAuthorsList"></ul>
                    @Html.HiddenFor(model => model.SelectedAuthorIDs)
                </div>
            </div>

        </div>

    </div>
}

<div>
    @Html.ActionLink("Voltar a lista", "Index")
</div>

<script>
    $(document).ready(function () {
        // Define the URL for author search
        var authorSearchUrl = "/Authors/SearchAuthors";

        // Input field for searching authors
        var $authorSearchInput = $("#authorSearch");
        var $authorSearchResults = $("#authorSearchResults");
        var $selectedAuthorsList = $("#selectedAuthorsList");
        var $selectedAuthorsInput = $("#SelectedAuthorIDs");

        $authorSearchInput.keyup(function () {
            var searchTerm = $authorSearchInput.val();
            if (searchTerm.length >= 2) {
                $.get(authorSearchUrl, { searchTerm: searchTerm }, function (data) {
                    $authorSearchResults.html(data);
                });
            } else {
                $authorSearchResults.html("");
            }
        });

        // Handle author selection
        $authorSearchResults.on("click", "li", function () {
            var authorId = $(this).data("author-id");
            var authorName = $(this).text();
            $selectedAuthorsList.append("<li>" + authorName + "</li>");
            $authorSearchInput.val("");
            $authorSearchResults.html("");
            // Update the hidden input field with selected author IDs
            var selectedAuthorIDs = $selectedAuthorsInput.val() || "";
            selectedAuthorIDs += authorId + ",";
            $selectedAuthorsInput.val(selectedAuthorIDs);
        });
    });
</script>
