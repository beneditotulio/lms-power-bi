@model SGBWeb.Models.Loan

@{
    ViewBag.Title = "Create Loan";
}

<h2>Criar Empréstimo</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Empréstimos</a></li>
        <li class="breadcrumb-item active" aria-current="page">Criar Empréstimo</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                Detalhes do Livro
            </div>
            <div class="card-body">
                <dl class="dl-horizontal">
                    <dt>Título do Livro:</dt>
                    <dd id="BookTitle"></dd>
                    <dt>ISBN:</dt>
                    <dd id="BookISBN"></dd>
                    <dt>Cópias Disponíveis:</dt>
                    <dd id="BookCopies"></dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                Detalhes do Estudante
            </div>
            <div class="card-body">
                <dl class="dl-horizontal">
                    <dt>Nome do Estudante:</dt>
                    <dd id="StudentName"></dd>
                    <dt>BI:</dt>
                    <dd id="StudentBI"></dd>
                    <dt>Número do Cartão do Estudante:</dt>
                    <dd id="StudentCardNumber"></dd>
                </dl>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("BookSearch", "Pesquisar Livro:", new { @class = "control-label" })
                    <input type="text" id="BookSearch" class="form-control" placeholder="Digite título do livro ou ISBN" onkeyup="searchBooks()">
                </div>
                <select class="form-control" id="bookDropdown">
                    <option value="">Selecione o livro</option>
                </select>
                <div id="bookDetails"></div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("StudentSearch", "Pesquisar Estudante:", new { @class = "control-label" })
                    <input type="text" id="StudentSearch" class="form-control" placeholder="Digite nome do estudante, BI ou número do cartão">
                    
                    <select class="form-control" id="studentDropdown" >
                        <option value="">Selecione o estudante</option>
                    </select>
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.ISBN)
        @Html.HiddenFor(model => model.CopyID)
        @Html.HiddenFor(model => model.MemberID)
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" id="submitBtn" disabled />
                @Html.ActionLink("Voltar à Lista", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        var selectedBook = null;
        var selectedStudent = null;

        // Função para buscar e exibir detalhes do livro
        $('#BookSearch').keyup(function () {
            var searchText = $(this).val().trim();
            if (searchText.length >= 3) {
                $.ajax({
                    url: '@Url.Action("GetBookDetails", "Loans")',
                    type: 'GET',
                    data: { searchText: searchText },
                    success: function (data) {
                        var dropdown = $('#bookDropdown');
                        dropdown.empty();
                        dropdown.append($('<option>', {
                            value: '',
                            text: 'Selecione o livro'
                        }));
                        if (data) {
                            $.each(data, function (index, book) {
                                dropdown.append($('<option>', {
                                    value: book.isbn,
                                    text: book.title
                                }));
                            });
                        }
                    },
                    error: function () {
                        console.log('Erro ao buscar detalhes do livro.');
                    }
                });
            }
        });

        // Função para exibir detalhes do livro selecionado
        $('#bookDropdown').change(function () {
            var selectedISBN = $(this).val();
            if (selectedISBN) {
                $.ajax({
                    url: '@Url.Action("GetBookDetails", "Loans")',
                    type: 'GET',
                    data: { searchText: selectedISBN },
                    success: function (data) {
                        if (data && data.length > 0) {
                            var book = data[0];
                            selectedBook = book;
                            $('#BookTitle').text(book.title);
                            $('#BookISBN').text(book.isbn);
                            $('#BookCopies').text(book.availableCopies);
                            enableSubmitButton();
                        } else {
                            selectedBook = null;
                            clearBookDetails();
                            disableSubmitButton();
                        }
                    },
                    error: function () {
                        console.log('Erro ao buscar detalhes do livro.');
                        disableSubmitButton();
                    }
                });
            } else {
                selectedBook = null;
                clearBookDetails();
                disableSubmitButton();
            }
        });

        @*// Função para buscar e exibir detalhes do estudante
        $('#StudentSearch').keyup(function () {
            var searchText = $(this).val().trim();
            if (searchText.length >= 3) {
                $.ajax({
                    url: '@Url.Action("GetStudentDetails", "Loans")',
                    type: 'GET',
                    data: { searchText: searchText },
                    success: function (data) {
                        if (data) {
                            selectedStudent = data;
                            $('#StudentName').text(data.name);
                            $('#StudentBI').text(data.bi);
                            $('#StudentCardNumber').text(data.cardNumber);
                            enableSubmitButton();
                        } else {
                            selectedStudent = null;
                            clearStudentDetails();
                            disableSubmitButton();
                        }
                    },
                    error: function () {
                        console.log('Erro ao buscar detalhes do estudante.');
                        disableSubmitButton();
                    }
                });
            } else {
                selectedStudent = null;
                clearStudentDetails();
                disableSubmitButton();
            }
        });*@


        // Function to search and display student details
$('#StudentSearch').keyup(function () {
    var searchText = $(this).val().trim();
    if (searchText.length >= 3) {
        $.ajax({
            url: '@Url.Action("GetStudentDetails", "Loans")',
            type: 'GET',
            data: { searchText: searchText },
            success: function (data) {
                var dropdown = $('#studentDropdown');
                dropdown.empty();
                dropdown.append($('<option>', {
                    value: '',
                    text: 'Select a student'
                }));
                if (data) {
                    $.each(data, function (index, student) {
                        dropdown.append($('<option>', {
                            value: student.cardNumber,
                            text: student.name
                        }));
                    });
                }
            },
            error: function () {
                console.log('Error fetching student details.');
            }
        });
    }
});

// Function to display selected student details
$('#studentDropdown').change(function () {
    var selectedCardNumber = $(this).val();
    if (selectedCardNumber) {
        $.ajax({
            url: '@Url.Action("GetStudentDetails", "Loans")',
            type: 'GET',
            data: { searchText: selectedCardNumber },
            success: function (data) {
                if (data && data.length > 0) {
                    var student = data[0];
                    selectedStudent = student;
                    $('#StudentName').text(student.name);
                    $('#StudentBI').text(student.bi);
                    $('#StudentCardNumber').text(student.cardNumber);
                    enableSubmitButton();
                } else {
                    selectedStudent = null;
                    clearStudentDetails();
                }
            },
            error: function () {
                console.log('Error fetching student details.');
            }
        });
    } else {
        selectedStudent = null;
        clearStudentDetails();
        //disableSubmitButton();
    }
});

function clearStudentDetails() {
    $('#StudentName').text('');
    $('#StudentBI').text('');
    $('#StudentCardNumber').text('');
}
        function enableSubmitButton() {
            if (selectedBook && selectedStudent) {
                $('#submitBtn').prop('disabled', false);
            }
        }

        function disableSubmitButton() {
            $('#submitBtn').prop('disabled', true);
        }

        function clearBookDetails() {
            $('#BookTitle').text('');
            $('#BookISBN').text('');
            $('#BookCopies').text('');
        }

        function clearStudentDetails() {
            $('#StudentName').text('');
            $('#StudentBI').text('');
            $('#StudentCardNumber').text('');
        }

        // Evento de envio do formulário
        $('form').submit(function (event) {
            event.preventDefault(); // Evita o envio padrão do formulário

            // Verifica se ambos livro e estudante foram selecionados
            if (selectedBook && selectedStudent) {
                // Atribui os valores selecionados aos campos hidden
                $('#ISBN').val(selectedBook.isbn);
                $('#CopyID').val(selectedBook.copyId); // Ajuste conforme a lógica do seu sistema
                $('#MemberID').val(selectedStudent.memberId);
                $('#UserId').val(selectedStudent.userId);

                // Submete o formulário
                this.submit();
            } else {
                alert('Por favor, selecione um livro e um estudante válidos.');
            }
        });
    });
</script>

